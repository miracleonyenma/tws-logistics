<!DOCTYPE html>
<html lang="en">

<head>
  <%- include('./partials/head.ejs') %>
    <link rel="stylesheet" href="/assets/css/tracking.css" />
    <link href="https://api.mapbox.com/mapbox-gl-js/v2.7.0/mapbox-gl.css" rel="stylesheet">
    <script src="https://api.mapbox.com/mapbox-gl-js/v2.7.0/mapbox-gl.js"></script>
</head>

<body>
  <%- include('./partials/header.ejs') %>

    <section class="site-section bg-light">
      <div class="container">
        <div class="row align-items-center">
          <div class="col-md-12 mb-5">
            <form id="form" class="form p-5 bg-white">
              <header class="mb-5">
                <h1>Track your shipment</h1>
              </header>

              <div class="row form-group">
                <div class="col-md-12">
                  <label class="text-black" for="tracking_code">Enter Tracking Code</label>
                  <input type="text" id="tracking_code" class="form-control" required />
                  <div class="error-cont tracking_code"></div>
                </div>
              </div>

              <div class="row form-group">
                <div class="col-md-12">
                  <input type="submit" value="Show shipment" class="btn btn-primary py-2 px-4 text-white" />
                </div>
              </div>
            </form>
          </div>

          <div class="col-md-12">
            <header id="shipment_details">
              <h1 id="shipment_description"></h1>
              <p id="shipment_location"></p>
            </header>
            <div id="map"></div>
          </div>
        </div>
      </div>
    </section>

    <%- include('./partials/footer.ejs') %>
      <%- include('./partials/scripts.ejs') %>

        <script>
          mapboxgl.accessToken = 'pk.eyJ1IjoibWlyYWNsZWlvIiwiYSI6ImNsMWxlZXBzZzA5dnUzaXM5aGdxcjF6emkifQ.9jyycP5jJTS_veZVNPCXiA';
          let map;
          let coordinates;


          const getShipment = async (id) => {
            const res = await fetch(`/shipment/${id}`);
            const { shipment } = await res.json();
            return shipment;
          };

          // async function initMap() {


          //   const urlSearchParams = new URLSearchParams(window.location.search);
          //   const params = Object.fromEntries(urlSearchParams.entries());
          //   const { id } = params;
          //   tracking_code.value = id

          //   console.log(80, id);
          //   console.log(getData({data: [tracking_code]}));

          //   const shipment = await getShipment(id);
          //   console.log(shipment);
          //   shipment_description.textContent = shipment.description
          //   shipment_location.textContent = shipment.pickup_loc.formatted_address

          //   console.log(71, shipment.pickup_loc.geometry.location);

          //   // map options

          //   let options = {
          //     zoom: 14,

          //     center: shipment
          //       ? shipment.pickup_loc.geometry.location
          //       : { lat: 5.4891, lng: 7.0176 },
          //   };

          //   // new map
          //   const map = new google.maps.Map(
          //     document.querySelector("#map"),
          //     options
          //   );

          //   // add marker
          //   const addMarker = ({ coords }) => {
          //     console.log(coords);
          //     const marker = new google.maps.Marker({
          //       position: coords,
          //       map: map,
          //     });
          //   };

          //   addMarker({
          //     coords: shipment.pickup_loc.geometry.location,
          //   });
          // }

          const getData = ({ data = [] }) => {
            const values = {};
            console.log(data);

            data.forEach((value) => {
              values[value.id] = value.value;
            });

            console.log(values);
            return values;
          };


          const cb = ({ map, center, coordinates }) => {
            const marker1 = new mapboxgl.Marker({
              color: "#000",
              draggable: true
            })
              .setLngLat(center)
              .setPopup(new mapboxgl.Popup().setHTML(
                `<h3>Location</h3>
                <p>Drag me to change the location</p>
                <p>Coordinates: <span id="lat"> yo </span></p>
                `
              ))
              .addTo(map);
            // Add the control to the map.
            // map.addControl(
            //   new MapboxGeocoder({
            //     accessToken: mapboxgl.accessToken,
            //     mapboxgl: mapboxgl
            //   })
            // );
            // Add the control to the map.
            // map.addControl(
            //   new MapboxGeocoder({
            //     accessToken: mapboxgl.accessToken,
            //     localGeocoder: coordinatesGeocoder,
            //     zoom: 4,
            //     placeholder: 'Try: -40, 170',
            //     mapboxgl: mapboxgl,
            //     reverseGeocode: true
            //   })
            // );
            map.addControl(new mapboxgl.NavigationControl());

            marker1.on('dragend', () => onDragEnd({ marker: marker1, coordinates }));

            // map.on('click', (e) => {
            //   const newCoords = e.lngLat;
            //   console.log({ lng: newCoords.lng, lat: newCoords.lat });
            //   marker1.setLngLat(newCoords).addTo(map)
            // })

          };


          const initMapBox = ({ container, center, coordsID }, cb) => {
            map = new mapboxgl.Map({
              container,
              center,
              zoom: 10,
              style: 'mapbox://styles/mapbox/streets-v11'
            });

            coordinates = document.getElementById(coordsID);

            cb({ map, center, coordinates })
          }


          form.addEventListener("submit", (e) => {
            e.preventDefault()
            const data = getData({ data: [tracking_code] })
            console.log(data.tracking_code);
            setTimeout(() => {
              window.location.assign(`/tracking?id=${data.tracking_code}`)
            }, 3000)
          })

          // const submitForm = ({ route, selector, data = [] }) => {
          //   const form = document.querySelector(selector);
          //   form.addEventListener("submit", async (e) => {
          //     e.preventDefault();

          //     try {
          //       const { tracking_code } = getData({ data });
          //       console.log("tracking_code", tracking_code);

          //       const shipments = await getShipment(tracking_code);
          //       console.log("shipment", shipment);
          //       options.center = shipment.pickup_loc.geometry.location;
          //     } catch (err) {
          //       console.trace(err);
          //     }
          //   });
          // };

          // submitForm({
          //   route: `/shipment/`,
          //   selector: "#form",
          //   data: [tracking_code],
          // });

          document.addEventListener("readystatechange", async (e) => {
            if (e.target.readyState === "complete") {
              const urlSearchParams = new URLSearchParams(window.location.search);
              const params = Object.fromEntries(urlSearchParams.entries());
              const { id } = params;
              tracking_code.value = id

              console.log(80, id);
              console.log(getData({ data: [tracking_code] }));

              const shipment = await getShipment(id);
              console.log(shipment);
              shipment_description.textContent = shipment.description
              shipment_location.textContent = `Current Location: ${shipment.current_loc.data.place_name}`

              console.log(71, shipment.current_loc);

              initMapBox({
                container: 'map',
                center: shipment.current_loc.lngLat,
                coordsID: 'lat'
              }, cb);
            }
          })
        </script>

        <!-- <script>
      mapboxgl.accessToken = 'pk.eyJ1IjoiZW5vczIyIiwiYSI6ImNsMHc2bG1wNDA0aXIzZHBvaHg0ejkyN2UifQ.b8_8NA6rih9lFRfbx9Hg0Q';
      var map = new mapboxgl.Map({
      container: 'map'
      style:
        'mapbox://style/mapbox/streets-v11'
    });
    </script> -->

</body>

</html>